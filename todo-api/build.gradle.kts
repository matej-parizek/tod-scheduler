plugins {
    // Apply the 'to-do.gradle.kotlin' plugin for handling TO-DO comments.
    id("todo.gradle.kotlin")
    // Apply the 'to-do.gradle.openapi' plugin for handling OpenAPI-related tasks.
    id("todo.gradle.openapi")
}

sourceSets {
    val main by getting {
        // Set the source directory for Kotlin files generated by OpenAPI.
        kotlin.srcDir(file("build/generated/src/main/kotlin"))
    }
}

tasks.named("compileKotlin").configure {
    // Make the 'compileKotlin' task depend on the 'openApiGenerate' task.
    dependsOn(tasks.named("openApiGenerate"))
}

dependencies {
    // Add Spring Boot WebFlux starter.
    implementation("org.springframework.boot:spring-boot-starter-webflux:3.3.3")
    // Add Swagger Core library.
    implementation("io.swagger.core.v3:swagger-core:2.2.8")
    // Add Swagger annotations library.
    implementation("io.swagger.core.v3:swagger-annotations:2.2.8")
    // Add Jackson databind nullable support.
    implementation("org.openapitools:jackson-databind-nullable:0.2.4")
    // Add Jackson annotations library.
    implementation("com.fasterxml.jackson.core:jackson-annotations:2.14.1")
    // Add Jakarta Validation API.
    implementation("jakarta.validation:jakarta.validation-api:3.0.2")
    // Add Kotlin coroutines core library.
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4")
}